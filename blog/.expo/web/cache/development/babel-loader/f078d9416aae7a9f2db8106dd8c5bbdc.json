{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport { State } from \"react-native-gesture-handler\";\nimport { call } from \"react-native-reanimated\";\nimport createDataContext from \"./createDataContext\";\n\nvar blogReducer = function blogReducer(state, action) {\n  switch (action.type) {\n    case \"add_blogpost\":\n      return [].concat(_toConsumableArray(state), [{\n        id: Math.floor(Math.random() * 9999()),\n        title: action.playload.title,\n        id: action.playload.content\n      }]);\n\n    case \"delete_blogpost\":\n      return state.filter(function (blogPost) {\n        return blogPost.id !== action.playload;\n      });\n\n    case \"edit_blogpost\":\n      return state.map(function (blogPost) {\n        if (blogPost.id === action.playload.id) return action.playload;else blogPost;\n      });\n\n    default:\n      return state;\n  }\n};\n\nvar addBlogPost = function addBlogPost(dispatch) {\n  return function (title, content, callback) {\n    dispatch({\n      type: \"add_blogpost\",\n      playload: {\n        title: title,\n        content: content\n      }\n    });\n    callback();\n  };\n};\n\nvar deleteBlogPost = function deleteBlogPost(dispatch) {\n  return function (id) {\n    return dispatch({\n      type: \"delete_blogpost\",\n      playload: id\n    });\n  };\n};\n\nvar editBlogPost = function editBlogPost(dispatch) {\n  return function (id, title, content) {\n    dispatch({\n      type: \"edit_blogpost\",\n      playload: {\n        id: id,\n        title: title,\n        content: content\n      }\n    });\n  };\n};\n\nvar _createDataContext = createDataContext(blogReducer, {\n  addBlogPost: addBlogPost,\n  deleteBlogPost: deleteBlogPost,\n  editBlogPost: editBlogPost\n}, [{\n  title: \"Test Post\",\n  content: \"Test Content\",\n  id: 1\n}]),\n    Context = _createDataContext.Context,\n    Provider = _createDataContext.Provider;\n\nexport { Context, Provider };","map":{"version":3,"sources":["C:/Users/user/react-native-course/blog/src/context/BlogContext.js"],"names":["State","call","createDataContext","blogReducer","state","action","type","id","Math","floor","random","title","playload","content","filter","blogPost","map","addBlogPost","dispatch","callback","deleteBlogPost","editBlogPost","Context","Provider"],"mappings":";AAAA,SAASA,KAAT,QAAsB,8BAAtB;AACA,SAASC,IAAT,QAAqB,yBAArB;AACA,OAAOC,iBAAP;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,KAAD,EAAQC,MAAR,EAAmB;AACrC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,cAAL;AACE,0CACKF,KADL,IAEE;AACEG,QAAAA,EAAE,EAAEC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,MAA3B,CADN;AAEEC,QAAAA,KAAK,EAAEN,MAAM,CAACO,QAAP,CAAgBD,KAFzB;AAGEJ,QAAAA,EAAE,EAAEF,MAAM,CAACO,QAAP,CAAgBC;AAHtB,OAFF;;AAQF,SAAK,iBAAL;AACE,aAAOT,KAAK,CAACU,MAAN,CAAa,UAACC,QAAD;AAAA,eAAcA,QAAQ,CAACR,EAAT,KAAgBF,MAAM,CAACO,QAArC;AAAA,OAAb,CAAP;;AACF,SAAK,eAAL;AACE,aAAOR,KAAK,CAACY,GAAN,CAAU,UAACD,QAAD,EAAc;AAC7B,YAAIA,QAAQ,CAACR,EAAT,KAAgBF,MAAM,CAACO,QAAP,CAAgBL,EAApC,EAAwC,OAAOF,MAAM,CAACO,QAAd,CAAxC,KACKG,QAAQ;AACd,OAHM,CAAP;;AAIF;AACE,aAAOX,KAAP;AAlBJ;AAoBD,CArBD;;AAuBA,IAAMa,WAAW,GAAG,SAAdA,WAAc,CAACC,QAAD,EAAc;AAChC,SAAO,UAACP,KAAD,EAAQE,OAAR,EAAiBM,QAAjB,EAA8B;AACnCD,IAAAA,QAAQ,CAAC;AACPZ,MAAAA,IAAI,EAAE,cADC;AAEPM,MAAAA,QAAQ,EAAE;AAAED,QAAAA,KAAK,EAAEA,KAAT;AAAgBE,QAAAA,OAAO,EAAEA;AAAzB;AAFH,KAAD,CAAR;AAIAM,IAAAA,QAAQ;AACT,GAND;AAOD,CARD;;AAUA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACF,QAAD,EAAc;AACnC,SAAO,UAACX,EAAD;AAAA,WAAQW,QAAQ,CAAC;AAAEZ,MAAAA,IAAI,EAAE,iBAAR;AAA2BM,MAAAA,QAAQ,EAAEL;AAArC,KAAD,CAAhB;AAAA,GAAP;AACD,CAFD;;AAIA,IAAMc,YAAY,GAAG,SAAfA,YAAe,CAACH,QAAD,EAAc;AACjC,SAAO,UAACX,EAAD,EAAKI,KAAL,EAAYE,OAAZ,EAAwB;AAC7BK,IAAAA,QAAQ,CAAC;AACPZ,MAAAA,IAAI,EAAE,eADC;AAEPM,MAAAA,QAAQ,EAAE;AAAEL,QAAAA,EAAE,EAAFA,EAAF;AAAMI,QAAAA,KAAK,EAALA,KAAN;AAAaE,QAAAA,OAAO,EAAPA;AAAb;AAFH,KAAD,CAAR;AAID,GALD;AAMD,CAPD;;AASO,yBAA8BX,iBAAiB,CACpDC,WADoD,EAEpD;AACEc,EAAAA,WAAW,EAAXA,WADF;AAEEG,EAAAA,cAAc,EAAdA,cAFF;AAGEC,EAAAA,YAAY,EAAZA;AAHF,CAFoD,EAOpD,CAAC;AAAEV,EAAAA,KAAK,EAAE,WAAT;AAAsBE,EAAAA,OAAO,EAAE,cAA/B;AAA+CN,EAAAA,EAAE,EAAE;AAAnD,CAAD,CAPoD,CAA/C;AAAA,IAAQe,OAAR,sBAAQA,OAAR;AAAA,IAAiBC,QAAjB,sBAAiBA,QAAjB","sourcesContent":["import { State } from \"react-native-gesture-handler\";\r\nimport { call } from \"react-native-reanimated\";\r\nimport createDataContext from \"./createDataContext\";\r\n\r\nconst blogReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"add_blogpost\":\r\n      return [\r\n        ...state,\r\n        {\r\n          id: Math.floor(Math.random() * 9999()),\r\n          title: action.playload.title,\r\n          id: action.playload.content,\r\n        },\r\n      ];\r\n    case \"delete_blogpost\":\r\n      return state.filter((blogPost) => blogPost.id !== action.playload);\r\n    case \"edit_blogpost\":\r\n      return state.map((blogPost) => {\r\n        if (blogPost.id === action.playload.id) return action.playload;\r\n        else blogPost;\r\n      });\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst addBlogPost = (dispatch) => {\r\n  return (title, content, callback) => {\r\n    dispatch({\r\n      type: \"add_blogpost\",\r\n      playload: { title: title, content: content },\r\n    });\r\n    callback();\r\n  };\r\n};\r\n\r\nconst deleteBlogPost = (dispatch) => {\r\n  return (id) => dispatch({ type: \"delete_blogpost\", playload: id });\r\n};\r\n\r\nconst editBlogPost = (dispatch) => {\r\n  return (id, title, content) => {\r\n    dispatch({\r\n      type: \"edit_blogpost\",\r\n      playload: { id, title, content },\r\n    });\r\n  };\r\n};\r\n\r\nexport const { Context, Provider } = createDataContext(\r\n  blogReducer,\r\n  {\r\n    addBlogPost,\r\n    deleteBlogPost,\r\n    editBlogPost,\r\n  },\r\n  [{ title: \"Test Post\", content: \"Test Content\", id: 1 }]\r\n);\r\n"]},"metadata":{},"sourceType":"module"}